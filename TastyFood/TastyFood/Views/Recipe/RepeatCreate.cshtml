@model CreateRecipeViewModel

@{
    ViewBag.Title = "Create Your Favorite Recipe";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="row">
    <div class="col-sm-1 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
        <form asp-controller="Recipe" asp-action="Create" class="needs-validation" method="post">
            <div class="form-group">
                <label asp-for="@Model.Title" class="form-label">Title:</label>
                <input asp-for="@Model.Title" class="form-control" aria-required="true" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Description" class="form-label mt-4">Description:</label>
                <textarea asp-for="@Model.Description" class="form-control" aria-required="true" rows="5"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.ImageUrl" class="form-label">Image URL:</label>
                <input asp-for="@Model.ImageUrl" class="form-control" aria-required="true" />
                <span asp-validation-for="ImageUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="row-2">
                    <div class="row">
                        <div class="col">
                            <label asp-for="@Model.PreparationTime" class="form-label">Preparation Time:</label>
                            <input asp-for="@Model.PreparationTime" class="form-control" aria-required="true" />
                            <span asp-validation-for="PreparationTime" class="text-danger"></span>
                        </div>
                        <div class="col">
                            <label asp-for="@Model.CookTime" class="form-label">Cook Time:</label>
                            <input asp-for="@Model.CookTime" class="form-control" aria-required="true" />
                            <span asp-validation-for="CookTime" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col">
                            <label asp-for="@Model.AdditionalTime" class="form-label">Additional Time:</label>
                            <input asp-for="@Model.AdditionalTime" class="form-control" aria-required="true" />
                            <span asp-validation-for="AdditionalTime" class="text-danger"></span>
                        </div>
                        <div class="col">
                            <label asp-for="@Model.ServingsQuantity" class="form-label">Servings:</label>
                            <input asp-for="@Model.ServingsQuantity" class="form-control" aria-required="true" />
                            <span asp-validation-for="ServingsQuantity" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="my-3 form-group" id="IngridientsDiv">
                <hr />
                @{
                    int ingredientsIndex = 0;
                }

                @foreach (var ingredient in Model.Ingredients)
                {
                    int ingredientsIndexLastDigit = (ingredientsIndex + 1) % 10;
                    string prefix;

                    string productIsInvalid = ViewData[$"ProductMessage{ingredientsIndex}"] != null ? "is-invalid" : string.Empty;

                    string quantityIsInvalid = ViewData[$"QuantityMessage{ingredientsIndex}"] != null ? "is-invalid" : string.Empty;

                    switch (ingredientsIndexLastDigit)
                    {
                        case 1: prefix = "st"; break;
                        case 2: prefix = "nd"; break;
                        case 3: prefix = "rd"; break;
                        default: prefix = "th"; break;
                    }
                    <div>
                        <span class="text-danger" asp-validation-for="Ingredients[ingredientsIndex].Product"></span>
                        <span class="text-danger" asp-validation-for="Ingredients[ingredientsIndex].Quantity"></span>
                    </div>
                    <p id="ingredient-paragraph-@ingredientsIndex" class="ingredients-paragraphs">@(ingredientsIndex + 1)@prefix Ingredient:</p>
                    <div class='input-group ingredients-divs' id="ingredient-div-@ingredientsIndex">
                        <span class="input-group-text">Product and Quantity</span>
                        <input asp-for="@ingredient.Product" name="Ingredients[@ingredientsIndex].Product" type="text" placeholder='e.g. potato' class="form-control @productIsInvalid input-products" />
                        <input asp-for="@ingredient.Quantity" name='Ingredients[@ingredientsIndex].Quantity' type="text" placeholder='e.g. 1.3' class="form-control @quantityIsInvalid input-quantities" />
                        <span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-trigger="hover focus" data-bs-content="Delete this product">
                            <button type="button" onclick="removeIngredient('@ingredientsIndex')" class="btn btn-outline-danger form-control delete-ingredients-btns"><i class="bi bi-trash3"></i></button>
                        </span>
                    </div>

                    ingredientsIndex++;
                }
            </div>
            <hr />
            <a class="btn btn-info my-3" onclick="addMoreIngredientFields()">Add Ingedients &nbsp; <i class="bi bi-plus-circle"></i></a>
            <div class="my-3 form-group" id="DirectionsDiv">
                <hr />
                @{
                    int stepsIndex = 0;
                }

                @foreach (var step in Model.Directions)
                {
                    int stepsIndexLastDigit = (stepsIndex + 1) % 10;
                    string prefix;

                    string stepIsInvalid = ViewData[$"StepMessage{stepsIndex}"] != null ? "is-invalid" : string.Empty;


                    switch (stepsIndexLastDigit)
                    {
                        case 1: prefix = "st"; break;
                        case 2: prefix = "nd"; break;
                        case 3: prefix = "rd"; break;
                        default: prefix = "th"; break;
                    }

                    <div class="steps-divs" id="step-div-@stepsIndex">
                        <span class="text-danger" asp-validation-for="Directions[stepsIndex].Step"></span>
                        <div class="d-grid gap-2 d-md-flex justify-content-between mt-3">
                            <p class="steps-paragraphs">@(stepsIndex + 1)@prefix Step:</p>
                            <span class="d-inline-block" tabindex="0" data-bs-toggle="popover" data-bs-placement="left" data-bs-trigger="hover focus" data-bs-content="Delete this step">
                                <button type="button" onclick="removeStep('@stepsIndex')" class="btn btn-outline-danger form-control delete-steps-btns"><i class="bi bi-trash3"></i></button>
                            </span>
                        </div>
                        <textarea asp-for="@step.Step" class='form-control @stepIsInvalid input-steps' name='Directions[@stepsIndex].Step' aria-required='true' rows='5'></textarea>
                        <span asp-validation-for="@step.Step" class="text-danger"></span>
                    </div>

                    stepsIndex++;
                }
            </div>
            <a class="btn btn-info my-3" onclick="addMoreDirectionsFields()">Add Steps &nbsp; <i class="bi bi-plus-circle"></i></a>
            <button class="btn btn-primary">Add Recipe</button>
        </form>
    </div>
    <button type="button" class="btn btn-primary" id="liveToastBtn">Show live toast</button>
</div>


@section Scripts {
    <script src="~/js/repeate-create.js"></script>
    <script src="~/js/validate-additional-fields.js"> </script>
    <script src="~/js/popover-js.js"></script>
    <partial name="_ValidationScriptsPartial" />
}